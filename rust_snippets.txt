fn main() {
    println!("Hello, World!");
}

fn main() {
    let x = 5;
    println!("{}", x);
}

use std::io;
fn main() {
    let mut name = String::new();
    println!("Enter your name: ");
    io::stdin().read_line(&mut name).unwrap();
    println!("Hello, {}", name.trim());
}

fn main() {
    for i in 1..=10 {
        println!("{}", i);
    }
}

fn main() {
    let numbers = vec![1, 2, 3, 4, 5];
    for num in numbers {
        println!("{}", num);
    }
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a number: ");
    io::stdin().read_line(&mut input).unwrap();
    let n: i32 = input.trim().parse().unwrap();
    println!("{}", n * n);
}

fn main() {
    let mut sum = 0;
    for i in 1..=5 {
        sum += i;
    }
    println!("{}", sum);
}

fn main() {
    let arr = vec![1, 2, 3, 4, 5];
    for item in arr {
        println!("{}", item);
    }
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a number: ");
    io::stdin().read_line(&mut input).unwrap();
    let num: i32 = input.trim().parse().unwrap();
    if num % 2 == 0 {
        println!("Even");
    } else {
        println!("Odd");
    }
}

fn main() {
    let a = 10;
    let b = 20;
    let max = if a > b { a } else { b };
    println!("{}", max);
}

fn main() {
    let mut count = 0;
    for i in 1..=100 {
        if i % 3 == 0 {
            count += 1;
        }
    }
    println!("{}", count);
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a number: ");
    io::stdin().read_line(&mut input).unwrap();
    let n: i32 = input.trim().parse().unwrap();
    let mut factorial = 1;
    for i in 1..=n {
        factorial *= i;
    }
    println!("{}", factorial);
}

fn main() {
    let mut a = 0;
    let mut b = 1;
    print!("{} {} ", a, b);
    for _ in 2..10 {
        let c = a + b;
        print!("{} ", c);
        a = b;
        b = c;
    }
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a number: ");
    io::stdin().read_line(&mut input).unwrap();
    let num: i32 = input.trim().parse().unwrap();
    let mut is_prime = true;
    for i in 2..num {
        if num % i == 0 {
            is_prime = false;
            break;
        }
    }
    if is_prime {
        println!("Prime");
    } else {
        println!("Not Prime");
    }
}

fn main() {
    let arr = vec![5, 2, 8, 1, 9];
    let mut max = arr[0];
    for &num in &arr {
        if num > max {
            max = num;
        }
    }
    println!("{}", max);
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a number: ");
    io::stdin().read_line(&mut input).unwrap();
    let n: i32 = input.trim().parse().unwrap();
    for i in 1..=n {
        for j in 1..=i {
            print!("* ");
        }
        println!();
    }
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a number: ");
    io::stdin().read_line(&mut input).unwrap();
    let mut num: i32 = input.trim().parse().unwrap();
    let mut sum = 0;
    while num > 0 {
        sum += num % 10;
        num /= 10;
    }
    println!("{}", sum);
}

fn main() {
    let mut a = 10;
    let mut b = 20;
    println!("Before swap: {} {}", a, b);
    let temp = a;
    a = b;
    b = temp;
    println!("After swap: {} {}", a, b);
}

fn main() {
    let arr = vec![1, 2, 3, 4, 5];
    let sum: i32 = arr.iter().sum();
    let average = sum as f64 / arr.len() as f64;
    println!("{}", average);
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a number: ");
    io::stdin().read_line(&mut input).unwrap();
    let mut num: i32 = input.trim().parse().unwrap();
    let mut reverse = 0;
    while num > 0 {
        reverse = reverse * 10 + num % 10;
        num /= 10;
    }
    println!("{}", reverse);
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a number: ");
    io::stdin().read_line(&mut input).unwrap();
    let num: i32 = input.trim().parse().unwrap();
    if num > 0 {
        println!("Positive");
    } else if num < 0 {
        println!("Negative");
    } else {
        println!("Zero");
    }
}

fn main() {
    let mut numbers = vec![1, 2, 3, 4, 5];
    for i in 0..numbers.len() {
        numbers[i] = numbers[i] * numbers[i];
    }
    for num in numbers {
        println!("{}", num);
    }
}

fn main() {
    let text = "Hello World";
    let vowels = "aeiou";
    let count = text.to_lowercase().chars()
        .filter(|c| vowels.contains(*c))
        .count();
    println!("{}", count);
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a number: ");
    io::stdin().read_line(&mut input).unwrap();
    let n: i32 = input.trim().parse().unwrap();
    for i in 1..=n {
        if i % 2 == 0 {
            println!("{}", i);
        }
    }
}

fn main() {
    let mut arr = vec![3, 1, 4, 1, 5, 9, 2, 6];
    arr.sort();
    for num in arr {
        print!("{} ", num);
    }
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a word: ");
    io::stdin().read_line(&mut input).unwrap();
    let word = input.trim();
    let is_palindrome = word.chars().eq(word.chars().rev());
    if is_palindrome {
        println!("Palindrome");
    } else {
        println!("Not Palindrome");
    }
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a number: ");
    io::stdin().read_line(&mut input).unwrap();
    let num: i32 = input.trim().parse().unwrap();
    let factors: Vec<i32> = (1..=num)
        .filter(|i| num % i == 0)
        .collect();
    println!("{:?}", factors);
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a string: ");
    io::stdin().read_line(&mut input).unwrap();
    let text = input.trim();
    let word_count = text.split_whitespace().count();
    println!("{}", word_count);
}

fn main() {
    let numbers = vec![1, 2, 3, 4, 5];
    for num in numbers {
        if num % 2 == 0 {
            println!("{}", num);
        }
    }
}

use std::io;
fn main() {
    let mut input = String::new();
    println!("Enter a number: ");
    io::stdin().read_line(&mut input).unwrap();
    let n: i32 = input.trim().parse().unwrap();
    for i in 1..=n {
        println!("{}", "*".repeat(i as usize));
    }
}

fn main() {
    let arr = vec![1, 2, 3, 4, 5];
    let min = arr.iter().min().unwrap();
    let max = arr.iter().max().unwrap();
    println!("Min: {} Max: {}", min, max);
} 